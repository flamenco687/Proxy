"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[331],{76647:function(n,e,t){t.r(e),t.d(e,{frontMatter:function(){return c},contentTitle:function(){return i},metadata:function(){return l},toc:function(){return s},default:function(){return p}});var o=t(87462),r=t(63366),a=(t(67294),t(3905)),u=["components"],c={},i="Proxy",l={type:"mdx",permalink:"/Proxy/",source:"@site/pages/index.md"},s=[],d={toc:s};function p(n){var e=n.components,t=(0,r.Z)(n,u);return(0,a.kt)("wrapper",(0,o.Z)({},d,t,{components:e,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"proxy"},"Proxy"),(0,a.kt)("p",null," Roblox library to detect changes in vanilla tables"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-lua"},'local Proxy = Proxy.new()\n\nProxy:OnIndex(function(Key: string, Value: any)) --! Will not fire when the key changes\n    print("Indexed ->", Key, Value)\nend)\n\nlocal Disconnect = Proxy:OnChange(function(Key: string, Value: any, OldValue: any)\n    print("Changed ->", Key, Value, OldValue)\nend)\n\nProxy.Test = 10 -- Output: Changed -> Test 10 nil\n\nprint(Proxy.Test) -- 1st Output: 10\n                  -- 2nd Output: Indexed -> Test 10\n\nDisconnect() -- The connection gets disconnected by just calling it, magic!\n\nProxy.Test = 50 -- Nothing prints out\n')))}p.isMDXComponent=!0}}]);