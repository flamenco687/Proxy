"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[556],{52157:function(e,t,n){n.r(t),n.d(t,{frontMatter:function(){return r},contentTitle:function(){return o},metadata:function(){return u},toc:function(){return p},default:function(){return c}});var l=n(87462),i=n(63366),a=(n(67294),n(3905)),d=["components"],r={},o=void 0,u={type:"mdx",permalink:"/Proxy/CHANGELOG",source:"@site/pages/CHANGELOG.md"},p=[{value:"v3.1.1 - 2022-07-01",id:"v311---2022-07-01",children:[{value:"Upgraded",id:"upgraded",children:[],level:3},{value:"Added",id:"added",children:[],level:3},{value:"Changes",id:"changes",children:[],level:3},{value:"Improvements",id:"improvements",children:[],level:3}],level:2},{value:"v3.1.0 - 2022-06-01",id:"v310---2022-06-01",children:[{value:"Added",id:"added-1",children:[],level:3}],level:2},{value:"v3.0.0 - 2022-05-01",id:"v300---2022-05-01",children:[{value:"Added",id:"added-2",children:[],level:3},{value:"Removed",id:"removed",children:[],level:3},{value:"Changes",id:"changes-1",children:[],level:3},{value:"Improvements",id:"improvements-1",children:[],level:3},{value:"Fixed",id:"fixed",children:[],level:3}],level:2},{value:"v2.1.4 - 2022-04-01",id:"v214---2022-04-01",children:[{value:"Added",id:"added-3",children:[],level:3}],level:2},{value:"v2.1.3 - 2022-03-01",id:"v213---2022-03-01",children:[{value:"Fixed",id:"fixed-1",children:[],level:3}],level:2},{value:"v2.1.2 - 2022-03-01",id:"v212---2022-03-01",children:[{value:"Fixed",id:"fixed-2",children:[],level:3}],level:2},{value:"v2.1.1 - 2022-03-01",id:"v211---2022-03-01",children:[{value:"Fixed",id:"fixed-3",children:[],level:3}],level:2},{value:"v2.1.0 - 2022-03-01",id:"v210---2022-03-01",children:[{value:"Upgraded",id:"upgraded-1",children:[],level:3},{value:"Added",id:"added-4",children:[],level:3},{value:"Improvements",id:"improvements-2",children:[],level:3},{value:"Fixed",id:"fixed-4",children:[],level:3}],level:2},{value:"v2.0.2 - 2022-01-01",id:"v202---2022-01-01",children:[{value:"Upgraded",id:"upgraded-2",children:[],level:3},{value:"Changed",id:"changed",children:[],level:3},{value:"Added",id:"added-5",children:[],level:3},{value:"Fixed",id:"fixed-5",children:[],level:3}],level:2},{value:"v2.0.1 - 2021-11-25",id:"v201---2021-11-25",children:[{value:"Changed",id:"changed-1",children:[],level:3}],level:2}],s={toc:p};function c(e){var t=e.components,n=(0,i.Z)(e,d);return(0,a.kt)("wrapper",(0,l.Z)({},s,n,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("h2",{id:"v311---2022-07-01"},"v3.1.1 - 2022-07-01"),(0,a.kt)("h3",{id:"upgraded"},"Upgraded"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"Moonwave: ","[0.2.12]"," -> ","[0.3.3]"," ")),(0,a.kt)("h3",{id:"added"},"Added"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"Type: Connection = ",(0,a.kt)("inlineCode",{parentName:"li"},"(CheckConnectionStatus: boolean?) -> boolean | nil")),(0,a.kt)("li",{parentName:"ul"},"Type: Listeners = ",(0,a.kt)("inlineCode",{parentName:"li"},"{[(...any) -> (...any)]: boolean}")),(0,a.kt)("li",{parentName:"ul"},"A first argument can now be passed when firing a connection to check if its still connected instead of disconnecting it")),(0,a.kt)("h3",{id:"changes"},"Changes"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"Connections now return a boolean depending on the connection status where false is not connected and true connected")),(0,a.kt)("h3",{id:"improvements"},"Improvements"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"Improved type annotations"),(0,a.kt)("li",{parentName:"ul"},"Improved method documentations"),(0,a.kt)("li",{parentName:"ul"},"Type table now reflects what it had to reflect")),(0,a.kt)("hr",null),(0,a.kt)("h2",{id:"v310---2022-06-01"},"v3.1.0 - 2022-06-01"),(0,a.kt)("h3",{id:"added-1"},"Added"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("p",{parentName:"li"},(0,a.kt)("inlineCode",{parentName:"p"},"Proxy.IsProxy()")," can now be called to check if given table is a proxy or not (function must be called by indexing it from the Proxy module instead of the proxy object)"),(0,a.kt)("pre",{parentName:"li"},(0,a.kt)("code",{parentName:"pre",className:"language-lua"},"local Proxy = require(Source.Proxy)\n\nlocal NewProxy = Proxy.new()\n\nprint(Proxy.IsProxy(NewProxy))    -- Output: true\nprint(NewProxy.IsProxy(NewProxy)) -- Errors: attempt to call a nil value\n\nprint(Proxy.IsProxy({})) -- Output: false\n"))),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("p",{parentName:"li"},"Missing moonwave documentation for ",(0,a.kt)("inlineCode",{parentName:"p"},"ListenToDisconnection()"))),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("p",{parentName:"li"},"Missing type annotation"))),(0,a.kt)("hr",null),(0,a.kt)("h2",{id:"v300---2022-05-01"},"v3.0.0 - 2022-05-01"),(0,a.kt)("h3",{id:"added-2"},"Added"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"Proxy:OnChange()")," in replacement of ",(0,a.kt)("inlineCode",{parentName:"li"},".Changed"),", directly connects the passed functions and can be disconnected by calling the returned function"),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"Proxy:OnIndex()")," in replacement of ",(0,a.kt)("inlineCode",{parentName:"li"},".Indexed"),", directly connects the passed functions and can be disconnected by calling the returned function"),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"Proxy:Set()")," and ",(0,a.kt)("inlineCode",{parentName:"li"},"Proxy:Get()")," to interact with values inside the proxy table that are proxy properties or methods"),(0,a.kt)("li",{parentName:"ul"},"Better documentation and extra functions regarding the new connections system")),(0,a.kt)("h3",{id:"removed"},"Removed"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"Signal dependency"),(0,a.kt)("li",{parentName:"ul"},"Proxies cannot longer inherit or convert other tables in proxies by default, that implementation must be done externally now to keep it simpler")),(0,a.kt)("h3",{id:"changes-1"},"Changes"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"Overhauled most documentation"),(0,a.kt)("li",{parentName:"ul"},"Changed the way change or index listeners are handled as part of the Signal removal"),(0,a.kt)("li",{parentName:"ul"},"Proxy methods are stored inside a table to prevent conflicts with indexing")),(0,a.kt)("h3",{id:"improvements-1"},"Improvements"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"When adding custom properties to a proxy, default proxy properties are protected and cannot be overriden. Trying to do so will throw a warning"),(0,a.kt)("li",{parentName:"ul"},"Simplified the code")),(0,a.kt)("h3",{id:"fixed"},"Fixed"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"A lot of issues, in general. The module should have near to 0 bugs")),(0,a.kt)("hr",null),(0,a.kt)("h2",{id:"v214---2022-04-01"},"v2.1.4 - 2022-04-01"),(0,a.kt)("h3",{id:"added-3"},"Added"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"Indexed")," & ",(0,a.kt)("inlineCode",{parentName:"li"},"Changed")," now pass the proxy as a third argument")),(0,a.kt)("hr",null),(0,a.kt)("h2",{id:"v213---2022-03-01"},"v2.1.3 - 2022-03-01"),(0,a.kt)("h3",{id:"fixed-1"},"Fixed"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"Proxies didn't inherit parent's custom properties"),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"build")," folder (",(0,a.kt)("a",{parentName:"li",href:"https://upliftgames.github.io/moonwave/"},"Moonwave")," page) was being included inside the package installation, updated wally.toml exclude")),(0,a.kt)("hr",null),(0,a.kt)("h2",{id:"v212---2022-03-01"},"v2.1.2 - 2022-03-01"),(0,a.kt)("h3",{id:"fixed-2"},"Fixed"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"Constructor attempted to check the lenght of a nil value when checking if children proxies should inherit properties")),(0,a.kt)("hr",null),(0,a.kt)("h2",{id:"v211---2022-03-01"},"v2.1.1 - 2022-03-01"),(0,a.kt)("h3",{id:"fixed-3"},"Fixed"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"Fixed ",(0,a.kt)("inlineCode",{parentName:"li"},".new()")," trying to iterate through CustomProperties even if it is nil"),(0,a.kt)("li",{parentName:"ul"},"Fixed passing default proxy properties as custom properties when constructing a new proxy from ",(0,a.kt)("inlineCode",{parentName:"li"},"__newindex")," ")),(0,a.kt)("hr",null),(0,a.kt)("h2",{id:"v210---2022-03-01"},"v2.1.0 - 2022-03-01"),(0,a.kt)("p",null,(0,a.kt)("em",{parentName:"p"},"Since this version, the Proxy project uses the default tree structure of ",(0,a.kt)("inlineCode",{parentName:"em"},"src/init.lua")," so moonwave documentation can be generated with ease.")),(0,a.kt)("h3",{id:"upgraded-1"},"Upgraded"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"StyLua: ","[0.11.2]"," -> ","[0.11.3]")),(0,a.kt)("h3",{id:"added-4"},"Added"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"CustomProperties: table")," can now be passed as an argument when constructing proxies. It is the equivalent of manually adding custom properties to\nthe proxy by using ",(0,a.kt)("inlineCode",{parentName:"li"},"rawset"),", but passing the argument will ensure those properties are replicated to inherited proxies that are directly found in the\nproxy origin"),(0,a.kt)("li",{parentName:"ul"},"Missing type annotations")),(0,a.kt)("h3",{id:"improvements-2"},"Improvements"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"Completed moonwave documentation"),(0,a.kt)("li",{parentName:"ul"},"Fixed some variables not using the new ",(0,a.kt)("a",{parentName:"li",href:"https://devforum.roblox.com/t/luau-recap-october-2021/1531825"},"if-then-else expression"))),(0,a.kt)("h3",{id:"fixed-4"},"Fixed"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"Fixed optional types being required types when constructing a proxy"),(0,a.kt)("li",{parentName:"ul"},"Proxies only inherited properties when being newly added, but tables found inside the proxy origin were not converted to proxies, fixed that")),(0,a.kt)("hr",null),(0,a.kt)("h2",{id:"v202---2022-01-01"},"v2.0.2 - 2022-01-01"),(0,a.kt)("p",null,(0,a.kt)("em",{parentName:"p"},"Happy new year!")),(0,a.kt)("h3",{id:"upgraded-2"},"Upgraded"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"Selene: ","[0.14.0]"," -> ","[0.15.0]")),(0,a.kt)("h3",{id:"changed"},"Changed"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"Proxy:Destroy()")," will now specifically return nil to comply with the type annotations"),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"Proxy:Destroy()")," will now set to nil the proxy's metatable"),(0,a.kt)("li",{parentName:"ul"},"Variable naming was updated to be all in PascalCase and stay accordingly with my personal style guide")),(0,a.kt)("h3",{id:"added-5"},"Added"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"When creating a new proxy, you can optionally specify if child tables should automatically be converted to proxies (Inheritance). Additionally,\nif a proxy's key is set to nil and its value is a proxy table, it will automatically be destroyed with ",(0,a.kt)("inlineCode",{parentName:"li"},"Proxy:Destroy()")),(0,a.kt)("li",{parentName:"ul"},"New type added to represent itself the Proxy class")),(0,a.kt)("h3",{id:"fixed-5"},"Fixed"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"Changed signal could fire even if the value was not actually changed to a new or different value")),(0,a.kt)("hr",null),(0,a.kt)("h2",{id:"v201---2021-11-25"},"v2.0.1 - 2021-11-25"),(0,a.kt)("h3",{id:"changed-1"},"Changed"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"Renamed ",(0,a.kt)("inlineCode",{parentName:"li"},":Kill()")," to ",(0,a.kt)("inlineCode",{parentName:"li"},":Destroy()")," for better consistency")),(0,a.kt)("hr",null),(0,a.kt)("p",null,(0,a.kt)("em",{parentName:"p"},"Late versions were never documented nor uploaded to github because they were developed without rojo. Since v2.0.0, proxy's development moved to rojo and the documentation process started")))}c.isMDXComponent=!0}}]);